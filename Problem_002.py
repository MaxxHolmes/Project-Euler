# Solution to Project Euler - Problem 2
# MaxxHolmes

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be: 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

# _______________________________________________________________________________________

# This is a classic fibonacci problem with a summing element.
# The fibonacci sequence is defined as f(n) = f(n-1) + f(n-2), with f(1) and f(2) being
# equal to 1 and 2 respectively.

def solution():

	answer = 0
	x = 1 # The current fibonacci number
	y = 2 # The next fibonacci number

	while x <= 4000000: # This is the 4 million limit
		if x % 2 == 0:
			answer += x

		# 
		x, y = y, x + y # f(n-1) -> f(n) and f(n) -> f(n+1)

	return str(answer)

print(solution())